"use strict";

var GlobalComponentsContext = require("./GlobalComponentsContext");

function ComponentsContext(out, parentComponentsContext) {
    var globalComponentsContext;
    var componentDef;

    if (parentComponentsContext) {
        globalComponentsContext = parentComponentsContext.P_;
        componentDef = parentComponentsContext._q_;

        var nestedContextsForParent;
        if (!(nestedContextsForParent = parentComponentsContext._r_)) {
            nestedContextsForParent = parentComponentsContext._r_ = [];
        }

        nestedContextsForParent.push(this);
    } else {
        globalComponentsContext = out.global._s_;
        if (globalComponentsContext === undefined) {
            out.global._s_ = globalComponentsContext = new GlobalComponentsContext(out);
        }
    }

    this.P_ = globalComponentsContext;
    this._s_ = [];
    this._t_ = out;
    this._q_ = componentDef;
    this._r_ = undefined;
}

ComponentsContext.prototype = {
    _u_: function (doc) {
        var componentDefs = this._s_;

        ComponentsContext._v_(componentDefs, doc);

        this._t_.emit("_w_");

        // Reset things stored in global since global is retained for
        // future renders
        this._t_.global._s_ = undefined;

        return componentDefs;
    }
};

function getComponentsContext(out) {
    return out._s_ || (out._s_ = new ComponentsContext(out));
}

module.exports = exports = ComponentsContext;

exports.__ = getComponentsContext;